if [ "$grub_platform" == "pc" ]; then
    search --set=root --label ostree --hint $bootdev,
else
    search --set=root --fs-type --hint $bootdev 4f68bce3-e8cd-4db1-96e7fbcaf984b709
fi

if [ "$root" ]; then
    regexp -s 1:dev '(.*),(.*)' $root
    if [ "$dev" == "$bootdev" ]; then
        if [ -e ($root)/boot/grub/grub.cfg ]; then
            if [ "$grub_platform" == "pc" ]; then
                set prefix=($root)/boot/grub
            fi
            configfile ($root)/boot/grub/grub.cfg
        fi
    fi
fi

search.file /endless/grub/grub.cfg eoslive $bootdev,
if [ "$eoslive" ]; then
    regexp -s 1:dev '(.*),(.*)' $eoslive
    if [ "$dev" == "$bootdev" ]; then
        export eoslive
        if [ "$grub_platform" == "pc" ]; then
            set prefix=($eoslive)/endless/grub
        fi
        configfile ($eoslive)/endless/grub/grub.cfg
    fi
fi

# If everything went wrong try to chainload a Windows image. Good luck.
for dev in ($bootdev,*); do
    regexp -s device '\((.*)\)' $dev

    if [ "$grub_platform" == "efi" ]; then
        if [ -f ($device)/EFI/MICROSOFT/BOOT/BOOTMGFW.EFI ]; then
            set root=$device
            chainloader ($root)/EFI/MICROSOFT/BOOT/BOOTMGFW.EFI
        fi
    else
        if [ -f ($device)/bootmgr -a -f ($device)/Boot/BCD ]; then
            set root=$device
            chainloader +1
        elif [ -f ($device)/ntldr -a -e ($device)/ntdetect.com -a -f ($device)/boot.ini ]; then
            set root=$device
            regexp -s devnum 'hd([0-9]+)' $root
            if test "$devnum" != "0"; then
                drivemap -s hd0 $root
            fi
            chainloader +1
        fi
    fi
done

echo "Unable to boot the image"
sleep -i 10
